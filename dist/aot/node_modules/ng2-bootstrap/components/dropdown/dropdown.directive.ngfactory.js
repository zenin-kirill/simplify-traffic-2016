/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
import * as import0 from 'ng2-bootstrap/components/dropdown/dropdown.directive';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
export var Wrapper_DropdownDirective = (function () {
    function Wrapper_DropdownDirective(p0, p1) {
        this.changed = false;
        this._isOpen = import1.UNINITIALIZED;
        this._autoClose = import1.UNINITIALIZED;
        this._keyboardNav = import1.UNINITIALIZED;
        this._appendToBody = import1.UNINITIALIZED;
        this.context = new import0.DropdownDirective(p0, p1);
    }
    Wrapper_DropdownDirective.prototype.check_isOpen = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._isOpen, currValue))) {
            this.changed = true;
            this.context.isOpen = currValue;
            this._isOpen = currValue;
        }
    };
    Wrapper_DropdownDirective.prototype.check_autoClose = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._autoClose, currValue))) {
            this.changed = true;
            this.context.autoClose = currValue;
            this._autoClose = currValue;
        }
    };
    Wrapper_DropdownDirective.prototype.check_keyboardNav = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._keyboardNav, currValue))) {
            this.changed = true;
            this.context.keyboardNav = currValue;
            this._keyboardNav = currValue;
        }
    };
    Wrapper_DropdownDirective.prototype.check_appendToBody = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._appendToBody, currValue))) {
            this.changed = true;
            this.context.appendToBody = currValue;
            this._appendToBody = currValue;
        }
    };
    Wrapper_DropdownDirective.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_DropdownDirective;
}());
//# sourceMappingURL=dropdown.directive.ngfactory.js.map