/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ng2-bootstrap/components/dropdown/dropdown.directive';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
export class Wrapper_DropdownDirective {
  context:import0.DropdownDirective;
  changed:boolean;
  /*private*/ _isOpen:any;
  /*private*/ _autoClose:any;
  /*private*/ _keyboardNav:any;
  /*private*/ _appendToBody:any;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this._isOpen = import1.UNINITIALIZED;
    this._autoClose = import1.UNINITIALIZED;
    this._keyboardNav = import1.UNINITIALIZED;
    this._appendToBody = import1.UNINITIALIZED;
    this.context = new import0.DropdownDirective(p0,p1);
  }
  check_isOpen(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isOpen,currValue))) {
      this.changed = true;
      this.context.isOpen = currValue;
      this._isOpen = currValue;
    }
  }
  check_autoClose(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._autoClose,currValue))) {
      this.changed = true;
      this.context.autoClose = currValue;
      this._autoClose = currValue;
    }
  }
  check_keyboardNav(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._keyboardNav,currValue))) {
      this.changed = true;
      this.context.keyboardNav = currValue;
      this._keyboardNav = currValue;
    }
  }
  check_appendToBody(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._appendToBody,currValue))) {
      this.changed = true;
      this.context.appendToBody = currValue;
      this._appendToBody = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
}