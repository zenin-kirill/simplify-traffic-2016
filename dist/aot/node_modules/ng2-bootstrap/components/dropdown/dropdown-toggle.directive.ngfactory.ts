/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ng2-bootstrap/components/dropdown/dropdown-toggle.directive';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
export class Wrapper_DropdownToggleDirective {
  context:import0.DropdownToggleDirective;
  changed:boolean;
  /*private*/ _isDisabled:any;
  /*private*/ _addToggleClass:any;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this._isDisabled = import1.UNINITIALIZED;
    this._addToggleClass = import1.UNINITIALIZED;
    this.context = new import0.DropdownToggleDirective(p0,p1);
  }
  check_isDisabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._isDisabled,currValue))) {
      this.changed = true;
      this.context.isDisabled = currValue;
      this._isDisabled = currValue;
    }
  }
  check_addToggleClass(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._addToggleClass,currValue))) {
      this.changed = true;
      this.context.addToggleClass = currValue;
      this._addToggleClass = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
}