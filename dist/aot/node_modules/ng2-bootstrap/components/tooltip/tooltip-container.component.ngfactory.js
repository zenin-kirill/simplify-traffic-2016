/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from 'ng2-bootstrap/components/tooltip/tooltip-container.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from 'ng2-bootstrap/components/tooltip/tooltip-options.class';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import13 from '../../../@angular/common/src/directives/ng_style.ngfactory';
import * as import14 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/common/src/directives/ng_if';
import * as import19 from '@angular/common/src/directives/ng_class';
import * as import20 from '@angular/common/src/directives/ng_style';
import * as import21 from '@angular/core/src/security';
import * as import22 from '../../../@angular/common/src/directives/ng_template_outlet.ngfactory';
import * as import23 from '@angular/common/src/directives/ng_template_outlet';
export var Wrapper_TooltipContainerComponent = (function () {
    function Wrapper_TooltipContainerComponent(p0, p1, p2) {
        this.changed = false;
        this.context = new import0.TooltipContainerComponent(p0, p1, p2);
    }
    Wrapper_TooltipContainerComponent.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_TooltipContainerComponent;
}());
var renderType_TooltipContainerComponent_Host = null;
var _View_TooltipContainerComponent_Host0 = (function (_super) {
    __extends(_View_TooltipContainerComponent_Host0, _super);
    function _View_TooltipContainerComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TooltipContainerComponent_Host0, renderType_TooltipContainerComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_TooltipContainerComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('tooltip-container', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_TooltipContainerComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._TooltipContainerComponent_0_4 = new Wrapper_TooltipContainerComponent(new import8.ElementRef(this._el_0), compView_0.ref, this.parentInjector.get(import9.TooltipOptions));
        this._appEl_0.initComponent(this._TooltipContainerComponent_0_4.context, [], compView_0);
        compView_0.create(this._TooltipContainerComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_TooltipContainerComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.TooltipContainerComponent) && (0 === requestNodeIndex))) {
            return this._TooltipContainerComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_TooltipContainerComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._TooltipContainerComponent_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._TooltipContainerComponent_0_4.context.ngAfterViewInit();
            }
        }
    };
    return _View_TooltipContainerComponent_Host0;
}(import1.AppView));
function viewFactory_TooltipContainerComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TooltipContainerComponent_Host === null)) {
        (renderType_TooltipContainerComponent_Host = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, [], {}));
    }
    return new _View_TooltipContainerComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var TooltipContainerComponentNgFactory = new import11.ComponentFactory('tooltip-container', viewFactory_TooltipContainerComponent_Host0, import0.TooltipContainerComponent);
var styles_TooltipContainerComponent = [];
var renderType_TooltipContainerComponent = null;
var _View_TooltipContainerComponent0 = (function (_super) {
    __extends(_View_TooltipContainerComponent0, _super);
    function _View_TooltipContainerComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TooltipContainerComponent0, renderType_TooltipContainerComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_TooltipContainerComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'tooltip');
        this.renderer.setElementAttribute(this._el_0, 'role', 'tooltip');
        this._NgClass_0_3 = new import12.Wrapper_NgClass(this.parentInjector.get(import15.IterableDiffers), this.parentInjector.get(import16.KeyValueDiffers), new import8.ElementRef(this._el_0), this.renderer);
        this._NgStyle_0_4 = new import13.Wrapper_NgStyle(this.parentInjector.get(import16.KeyValueDiffers), new import8.ElementRef(this._el_0), this.renderer);
        this._text_1 = this.renderer.createText(this._el_0, '\n      ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'tooltip-arrow');
        this._text_3 = this.renderer.createText(this._el_0, '\n      ', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_4 = new import3.AppElement(4, 0, this, this._anchor_4);
        this._TemplateRef_4_5 = new import17.TemplateRef_(this._appEl_4, viewFactory_TooltipContainerComponent1);
        this._NgIf_4_6 = new import14.Wrapper_NgIf(this._appEl_4.vcRef, this._TemplateRef_4_5);
        this._text_5 = this.renderer.createText(this._el_0, '\n      ', null);
        this._anchor_6 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_6 = new import3.AppElement(6, 0, this, this._anchor_6);
        this._TemplateRef_6_5 = new import17.TemplateRef_(this._appEl_6, viewFactory_TooltipContainerComponent2);
        this._NgIf_6_6 = new import14.Wrapper_NgIf(this._appEl_6.vcRef, this._TemplateRef_6_5);
        this._text_7 = this.renderer.createText(this._el_0, '\n      ', null);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_8 = new import3.AppElement(8, 0, this, this._anchor_8);
        this._TemplateRef_8_5 = new import17.TemplateRef_(this._appEl_8, viewFactory_TooltipContainerComponent4);
        this._NgIf_8_6 = new import14.Wrapper_NgIf(this._appEl_8.vcRef, this._TemplateRef_8_5);
        this._text_9 = this.renderer.createText(this._el_0, '\n    ', null);
        this._map_0 = import4.pureProxy3(function (p0, p1, p2) {
            return {
                top: p0,
                left: p1,
                display: p2
            };
        });
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._anchor_4,
            this._text_5,
            this._anchor_6,
            this._text_7,
            this._anchor_8,
            this._text_9
        ], [], []);
        return null;
    };
    _View_TooltipContainerComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import18.NgIf) && (4 === requestNodeIndex))) {
            return this._NgIf_4_6.context;
        }
        if (((token === import17.TemplateRef) && (6 === requestNodeIndex))) {
            return this._TemplateRef_6_5;
        }
        if (((token === import18.NgIf) && (6 === requestNodeIndex))) {
            return this._NgIf_6_6.context;
        }
        if (((token === import17.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import18.NgIf) && (8 === requestNodeIndex))) {
            return this._NgIf_8_6.context;
        }
        if (((token === import19.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._NgClass_0_3.context;
        }
        if (((token === import20.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._NgStyle_0_4.context;
        }
        return notFoundResult;
    };
    _View_TooltipContainerComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = 'tooltip';
        this._NgClass_0_3.check_klass(currVal_0, throwOnChange, false);
        var currVal_1 = this.context.classMap;
        this._NgClass_0_3.check_ngClass(currVal_1, throwOnChange, false);
        this._NgClass_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        var currVal_2 = this._map_0(this.context.top, this.context.left, this.context.display);
        this._NgStyle_0_4.check_ngStyle(currVal_2, throwOnChange, false);
        this._NgStyle_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        var currVal_3 = (this.context.htmlContent && !this.context.isTemplate);
        this._NgIf_4_6.check_ngIf(currVal_3, throwOnChange, false);
        this._NgIf_4_6.detectChangesInternal(this, this._anchor_4, throwOnChange);
        var currVal_4 = (this.context.htmlContent && this.context.isTemplate);
        this._NgIf_6_6.check_ngIf(currVal_4, throwOnChange, false);
        this._NgIf_6_6.detectChangesInternal(this, this._anchor_6, throwOnChange);
        var currVal_5 = this.context.content;
        this._NgIf_8_6.check_ngIf(currVal_5, throwOnChange, false);
        this._NgIf_8_6.detectChangesInternal(this, this._anchor_8, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_TooltipContainerComponent0;
}(import1.AppView));
export function viewFactory_TooltipContainerComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TooltipContainerComponent === null)) {
        (renderType_TooltipContainerComponent = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, styles_TooltipContainerComponent, {}));
    }
    return new _View_TooltipContainerComponent0(viewUtils, parentInjector, declarationEl);
}
var _View_TooltipContainerComponent1 = (function (_super) {
    __extends(_View_TooltipContainerComponent1, _super);
    function _View_TooltipContainerComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TooltipContainerComponent1, renderType_TooltipContainerComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_TooltipContainerComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'tooltip-inner');
        this._text_1 = this.renderer.createText(this._el_0, '\n      ', null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_TooltipContainerComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import4.interpolate(1, '', this.parent.context.htmlContent, '');
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import21.SecurityContext.HTML, currVal_0));
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_TooltipContainerComponent1;
}(import1.AppView));
function viewFactory_TooltipContainerComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_TooltipContainerComponent1(viewUtils, parentInjector, declarationEl);
}
var _View_TooltipContainerComponent2 = (function (_super) {
    __extends(_View_TooltipContainerComponent2, _super);
    function _View_TooltipContainerComponent2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TooltipContainerComponent2, renderType_TooltipContainerComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_TooltipContainerComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'tooltip-inner');
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_2 = new import3.AppElement(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import17.TemplateRef_(this._appEl_2, viewFactory_TooltipContainerComponent3);
        this._NgTemplateOutlet_2_6 = new import22.Wrapper_NgTemplateOutlet(this._appEl_2.vcRef);
        this._text_3 = this.renderer.createText(this._el_0, '\n      ', null);
        this._map_0 = import4.pureProxy1(function (p0) {
            return { model: p0 };
        });
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ], [], []);
        return null;
    };
    _View_TooltipContainerComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import23.NgTemplateOutlet) && (2 === requestNodeIndex))) {
            return this._NgTemplateOutlet_2_6.context;
        }
        return notFoundResult;
    };
    _View_TooltipContainerComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this._map_0(this.parent.context.context);
        this._NgTemplateOutlet_2_6.check_ngOutletContext(currVal_0, throwOnChange, false);
        var currVal_1 = this.parent.context.htmlContent;
        this._NgTemplateOutlet_2_6.check_ngTemplateOutlet(currVal_1, throwOnChange, false);
        this._NgTemplateOutlet_2_6.detectChangesInternal(this, this._anchor_2, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_TooltipContainerComponent2;
}(import1.AppView));
function viewFactory_TooltipContainerComponent2(viewUtils, parentInjector, declarationEl) {
    return new _View_TooltipContainerComponent2(viewUtils, parentInjector, declarationEl);
}
var _View_TooltipContainerComponent3 = (function (_super) {
    __extends(_View_TooltipContainerComponent3, _super);
    function _View_TooltipContainerComponent3(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TooltipContainerComponent3, renderType_TooltipContainerComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_TooltipContainerComponent3.prototype.createInternal = function (rootSelector) {
        this._text_0 = this.renderer.createText(null, '\n        ', null);
        this.init([].concat([this._text_0]), [this._text_0], [], []);
        return null;
    };
    return _View_TooltipContainerComponent3;
}(import1.AppView));
function viewFactory_TooltipContainerComponent3(viewUtils, parentInjector, declarationEl) {
    return new _View_TooltipContainerComponent3(viewUtils, parentInjector, declarationEl);
}
var _View_TooltipContainerComponent4 = (function (_super) {
    __extends(_View_TooltipContainerComponent4, _super);
    function _View_TooltipContainerComponent4(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TooltipContainerComponent4, renderType_TooltipContainerComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_TooltipContainerComponent4.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'tooltip-inner');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_TooltipContainerComponent4.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import4.interpolate(1, '\n        ', this.parent.context.content, '\n      ');
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setText(this._text_1, currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_TooltipContainerComponent4;
}(import1.AppView));
function viewFactory_TooltipContainerComponent4(viewUtils, parentInjector, declarationEl) {
    return new _View_TooltipContainerComponent4(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=tooltip-container.component.ngfactory.js.map