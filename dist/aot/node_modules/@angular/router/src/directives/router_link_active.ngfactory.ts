/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/router/src/directives/router_link_active';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
export class Wrapper_RouterLinkActive {
  context:import0.RouterLinkActive;
  changed:boolean;
  changes:{[key: string]:any};
  /*private*/ _routerLinkActiveOptions:any;
  /*private*/ _routerLinkActive:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this.changes = {};
    this._routerLinkActiveOptions = import1.UNINITIALIZED;
    this._routerLinkActive = import1.UNINITIALIZED;
    this.context = new import0.RouterLinkActive(p0,p1,p2);
  }
  check_routerLinkActiveOptions(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._routerLinkActiveOptions,currValue))) {
      this.changed = true;
      this.context.routerLinkActiveOptions = currValue;
      this.changes['routerLinkActiveOptions'] = new import1.SimpleChange(this._routerLinkActiveOptions,currValue);
      this._routerLinkActiveOptions = currValue;
    }
  }
  check_routerLinkActive(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._routerLinkActive,currValue))) {
      this.changed = true;
      this.context.routerLinkActive = currValue;
      this.changes['routerLinkActive'] = new import1.SimpleChange(this._routerLinkActive,currValue);
      this._routerLinkActive = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this.changes);
      this.changes = {};
    } }
    return changed;
  }
}