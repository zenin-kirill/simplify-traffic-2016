/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
import * as import0 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import2 from '@angular/core/src/change_detection/change_detection';
import * as import3 from '@angular/core/src/linker/view_utils';
export var Wrapper_SelectControlValueAccessor = (function () {
    function Wrapper_SelectControlValueAccessor(p0, p1) {
        this.changed = false;
        this.context = new import0.SelectControlValueAccessor(p0, p1);
    }
    Wrapper_SelectControlValueAccessor.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_SelectControlValueAccessor;
}());
export var Wrapper_NgSelectOption = (function () {
    function Wrapper_NgSelectOption(p0, p1, p2) {
        this.changed = false;
        this._ngValue = import2.UNINITIALIZED;
        this._value = import2.UNINITIALIZED;
        this.context = new import0.NgSelectOption(p0, p1, p2);
    }
    Wrapper_NgSelectOption.prototype.check_ngValue = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._ngValue, currValue))) {
            this.changed = true;
            this.context.ngValue = currValue;
            this._ngValue = currValue;
        }
    };
    Wrapper_NgSelectOption.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._value, currValue))) {
            this.changed = true;
            this.context.value = currValue;
            this._value = currValue;
        }
    };
    Wrapper_NgSelectOption.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_NgSelectOption;
}());
//# sourceMappingURL=select_control_value_accessor.ngfactory.js.map