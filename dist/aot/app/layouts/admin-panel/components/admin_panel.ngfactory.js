/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../../../app/layouts/admin-panel/components/admin_panel';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../../../shared/topnav/topnav.ngfactory';
import * as import11 from '../../../shared/sidebar/sidebar.ngfactory';
import * as import12 from '../../../../node_modules/@angular/router/src/directives/router_outlet.ngfactory';
import * as import13 from '@angular/router/src/router_outlet_map';
import * as import14 from '@angular/core/src/linker/component_factory_resolver';
import * as import15 from '../../../../../app/shared/topnav/topnav';
import * as import16 from '../../../../../app/shared/sidebar/sidebar';
import * as import17 from '@angular/router/src/directives/router_outlet';
export var Wrapper_AdminPanelComponent = (function () {
    function Wrapper_AdminPanelComponent() {
        this.changed = false;
        this.context = new import0.AdminPanelComponent();
    }
    Wrapper_AdminPanelComponent.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_AdminPanelComponent;
}());
var renderType_AdminPanelComponent_Host = null;
var _View_AdminPanelComponent_Host0 = (function (_super) {
    __extends(_View_AdminPanelComponent_Host0, _super);
    function _View_AdminPanelComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AdminPanelComponent_Host0, renderType_AdminPanelComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AdminPanelComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('admin-panel', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_AdminPanelComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._AdminPanelComponent_0_4 = new Wrapper_AdminPanelComponent();
        this._appEl_0.initComponent(this._AdminPanelComponent_0_4.context, [], compView_0);
        compView_0.create(this._AdminPanelComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_AdminPanelComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.AdminPanelComponent) && (0 === requestNodeIndex))) {
            return this._AdminPanelComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_AdminPanelComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._AdminPanelComponent_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_AdminPanelComponent_Host0;
}(import1.AppView));
function viewFactory_AdminPanelComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AdminPanelComponent_Host === null)) {
        (renderType_AdminPanelComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_AdminPanelComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var AdminPanelComponentNgFactory = new import9.ComponentFactory('admin-panel', viewFactory_AdminPanelComponent_Host0, import0.AdminPanelComponent);
var styles_AdminPanelComponent = [];
var renderType_AdminPanelComponent = null;
var _View_AdminPanelComponent0 = (function (_super) {
    __extends(_View_AdminPanelComponent0, _super);
    function _View_AdminPanelComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AdminPanelComponent0, renderType_AdminPanelComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AdminPanelComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'top-nav', null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = import10.viewFactory_TopNavComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._TopNavComponent_0_4 = new import10.Wrapper_TopNavComponent();
        this._appEl_0.initComponent(this._TopNavComponent_0_4.context, [], compView_0);
        compView_0.create(this._TopNavComponent_0_4.context, [], null);
        this._text_1 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_2 = this.renderer.createElement(parentRenderNode, 'sidebar-cmp', null);
        this._appEl_2 = new import3.AppElement(2, null, this, this._el_2);
        var compView_2 = import11.viewFactory_SidebarComponent0(this.viewUtils, this.injector(2), this._appEl_2);
        this._SidebarComponent_2_4 = new import11.Wrapper_SidebarComponent();
        this._appEl_2.initComponent(this._SidebarComponent_2_4.context, [], compView_2);
        compView_2.create(this._SidebarComponent_2_4.context, [], null);
        this._text_3 = this.renderer.createText(parentRenderNode, '\n', null);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_5 = this.renderer.createElement(parentRenderNode, 'section', null);
        this.renderer.setElementAttribute(this._el_5, 'class', 'main-container');
        this._text_6 = this.renderer.createText(this._el_5, ' ', null);
        this._text_7 = this.renderer.createText(this._el_5, '\n	', null);
        this._el_8 = this.renderer.createElement(this._el_5, 'router-outlet', null);
        this._appEl_8 = new import3.AppElement(8, 5, this, this._el_8);
        this._RouterOutlet_8_5 = new import12.Wrapper_RouterOutlet(this.parentInjector.get(import13.RouterOutletMap), this._appEl_8.vcRef, this.parentInjector.get(import14.ComponentFactoryResolver), null);
        this._text_9 = this.renderer.createText(this._el_5, '\n', null);
        this._text_10 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._text_10
        ], [], []);
        return null;
    };
    _View_AdminPanelComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import15.TopNavComponent) && (0 === requestNodeIndex))) {
            return this._TopNavComponent_0_4.context;
        }
        if (((token === import16.SidebarComponent) && (2 === requestNodeIndex))) {
            return this._SidebarComponent_2_4.context;
        }
        if (((token === import17.RouterOutlet) && (8 === requestNodeIndex))) {
            return this._RouterOutlet_8_5.context;
        }
        return notFoundResult;
    };
    _View_AdminPanelComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._TopNavComponent_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this._SidebarComponent_2_4.detectChangesInternal(this, this._el_2, throwOnChange);
        this._RouterOutlet_8_5.detectChangesInternal(this, this._el_8, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_AdminPanelComponent0.prototype.destroyInternal = function () {
        this._RouterOutlet_8_5.context.ngOnDestroy();
    };
    return _View_AdminPanelComponent0;
}(import1.AppView));
export function viewFactory_AdminPanelComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AdminPanelComponent === null)) {
        (renderType_AdminPanelComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_AdminPanelComponent, {}));
    }
    return new _View_AdminPanelComponent0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=admin_panel.ngfactory.js.map